import { ChecklistItem } from './types';

export const DesignContent: ChecklistItem[] = [
  {
    text: "Design task",
    type: "h1",
    description: "Подготовка дизайн-спецификаций",
    children: [
      {
        text: "Проектирование взаимодействий и дизайна",
        type: "h4",
        children: [
          { text: "Архитектура и объектная модель", type: "item" },
          { text: "Сценарии и навигация", type: "item" },
          {
            text: "Основной флоу",
            type: "item",
            comment: "В передаваемых макетах показан пользовательский сценарий, визуально показывающий как работает решение по шагам или стейтам",
          },
          {
            text: "Корнер-кейсы",
            type: "item",
            comment: "Например, как будет выглядеть экран с большим количеством элементов в списке, ленте операций",
          },
        ],
      },
      {
        text: "Спецификация",
        type: "h4",
        children: [
          {
            text: "Адаптив / Кросс-платформа",
            type: "item",
            comment:
              "[Web]: интерфейс поддерживает адаптивную версию, прорисованы ключевые экраны и поведение элементов на разных брейкпоинтах, при этом не страдает UX.\n[App]: интерфейс адаптирован под iOS и Android, планшетную версию. Учтены паттерны системы и нативные привычки её пользователей",
          },
          { text: "Роли и доступы", type: "item" },
          {
            text: "Error состояния",
            type: "item",
            comment:
              "Экраны или элементы имеют нулевые, минимальные и максимальные состояния.\nТакже могут меняться в зависимости от контекста. Учтены ошибки, в том числе пропажа связи с сервером и прерывание сессии.\nНапример, как отработает саджест выбора счета, если открыт только один счет, а если он заблокирован?",
          },
          {
            text: "Нулевые состояния",
            type: "item",
            comment:
              "Например, какой будет экран истории документов, если в нем до сих пор не создано ни одного документа (zero)?\nНапример, что увидит пользователь в элементе названия компании, если название компании превышает 20 символов (max)?",
          },
          {
            text: "Экраны загрузки и ожидания",
            type: "item",
            comment:
              "В сценарии и элементах учтены и отображены состояния загрузки. Отрисованы скелетоны при необходимости.\nПример: Первый вход на экран при слабом интернете.\nДолгий ответ бэка при конфирме.\nПоэтапная загрузка элементов страницы при входе",
          },
          {
            text: "Переходы и анимации",
            type: "item",
            comment: "Отмечены и описаны переходы между экранами.\nЕсть описание нестандартных анимаций",
          },
        ],
      },
      {
        text: "Компоненты",
        type: "h4",
        children: [
          {
            text: "Все экраны собраны на компонентах",
            type: "item",
            comment:
              "Только новые и уникальные блоки могут быть не из tui.\nПроверьте себя, точно нельзя обойтись без кастома?",
          },
          {
            text: "Токены",
            type: "item",
            comment: "Шрифтовые группы, цвета, скругления и отступы взяты из токенов",
          },
        ],
      },
      {
        text: "Текст",
        type: "h4",
        children: [
          { text: "Текст соответствует редполитике", type: "item" },
          {
            text: "Push & SMS (по возможности)",
            type: "item",
            comment:
              "Проработаны кейсы с пушами и прочими нотификациями, отправляемыми клиенту — вынесены существующие или примерный вижн (если фича новая)",
          },
        ],
      },
      {
        text: "Артефакты",
        type: "h4",
        children: [
          {
            text: "Решение задачи",
            type: "item",
            comment:
              "Финальное решение, соответствующее критериям качества текста в интерфейсе, готовое к разработке",
          },
        ],
      },
    ],
  },
];
